@page "/"
@inject NavigationManager UriHelper
@using VisNetwork.Blazor.Models
@if(start){
<section class="hero is-large is-link">
	<div class="hero-body">
		<div class="container">
<Animate Animation="Animations.Fade" Delay="TimeSpan.FromSeconds(1)">
	<div class="columns  is-mobile is-centered ">
		<div class="column is-half"><p class="title is-1 has-text-centered">Bisimulation</p></div>

	</div>
</Animate>
<Animate Animation="Animations.Fade" Delay="TimeSpan.FromSeconds(1.5)">
	<div class="columns is-mobile is-centered ">
		<div class="column is-half"><h2 class="subtitle is-1 has-text-centered">Game</h2></div>
	</div>
</Animate>
<Animate Animation="Animations.Fade" Delay="TimeSpan.FromSeconds(2)">
	<div class="columns  is-mobile is-centered is-multiline ">
	<div class="column is-narrow">
						<button class="button is-primary button is-large" @onclick="OnClick">PLAYER VS PLAYER</button>
	</div>
	<div class="column is-narrow">
						<button class="button is-primary button is-large" @onclick="OnClickAi">PLAYER VS AI</button>
	</div>
	</div>
</Animate>
		</div>
	</div>

</section>
}
@if (!start && ai)
{
<section class="hero is-large is-link my-0 py-0">
	<div class="hero-body">
		<div class="container">

			<Animate Animation="Animations.Fade" Delay="TimeSpan.FromSeconds(0.3)">
				<div class="columns  is-mobile is-centered is-multiline ">
					<div class="column is-narrow">
						<button class="button is-primary is-large " @onclick="asSpoiler">Play as Spoiler</button>
					</div>
					<div class="column is-narrow">
						<button class="button is-primary button is-large" @onclick="asDuplicator">Play as Duplicator</button>
					</div>
				</div>
			</Animate>
		</div>
	</div>
</section>

}
else
{
	start = false;
	
}


@code {
	private string parameter;

	bool start = true;
	bool ai = false;
	string mode;
	private void OnClick()
	{


		UriHelper.NavigateTo($"play");
	}
	private void OnClickAi()
	{
		start = false;
		ai = true;
		
	}
	private void asSpoiler()
	{
		
		mode = "spoiler";
		UriHelper.NavigateTo($"play/{mode}");
	}
	private void asDuplicator()
	{
	
		mode = "duplicator";
		UriHelper.NavigateTo($"play/{mode}");
	}

	

	
}
